---
- hosts: all
  become: true
  vars:
    grafana_containers: 1
    grafana_container_name: graf
    grafana_image: grafana/grafana-enterprise #ubuntu #:xenial
    prometheus_containers: 1
    prometheus_container_name: prom
    prometheus_image: prom/prometheus

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Use python3
      shell:
        cmd sudo su; update-alternatives --install /usr/bin/python python /usr/bin/python3 10

    - name: Install Docker Module for Python
      pip:
        name: docker-py # for python < 3

    - name: Pull Grafana image
      community.docker.docker_image:
        name: "{{ grafana_image }}"
        source: pull

    - name: Pull Prometheus image
      community.docker.docker_image:
        name: "{{ prometheus_image }}"
        source: pull

    - name: Create Grafana containers
      community.docker.docker_container:
        name: "{{ grafana_container_name }}{{ item }}"
        image: "{{ grafana_image }}"
        state: present
      with_sequence: count={{ grafana_containers }}

    - name: Create Prometheus containers
      community.docker.docker_container:
        name: "{{ prometheus_container_name }}{{ item }}"
        image: "{{ prometheus_image }}"
        state: present
      with_sequence: count={{ prometheus_containers }}
